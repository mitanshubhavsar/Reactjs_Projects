In the Folder the_burger_builder_app ;
	1.npm start
		(if shows error on npm start) :- Run npm install //installing all packages

	2.Setting up Firebase Project 
		google firebase -> Go to console -> Add project or (use created one) -> Build -> Realtime Database 
			Setting Rules : Realtime Database -> Rules 
					{
                                          "rules": {
    
                                             ".read": "true",  
                                             ".write": "true",  
                                           }   
                                        }
			then -> Publish
	
	3.Setting ingredients for axios get request on Firebase:
		click on + 
		name = ingredients
		click + of ingredients
		name:bacon value:0
		name:cheese value:0
		name:meat value:0
		name:salad value:0

	4.Checking Post request of axios on Firebase:
		Add ingredients to your burger => Order Now => continue 
			Notice orders in Data(firebase) and click + to maximize the data

	
	5.Setting Authentication on Firebase
		google firebase -> Authentication -> sign-in method -> Email/Password -> Enable & save
			
		  To get the address on where signup users and get a token: 
			google => firebase rest auth => https://firebase.google.com/docs/reference/rest/auth (Firebase Auth REST API) => Sign up with email / password => Endpoint(copy it and use it in code)
				in Endpoint => notice [API-KEY] => project settings -> web API key (copy it & paste in endpoint)  
		then signup with email,password and check the console for response => data => idToken

		  To get the address on where signin users and get a token: 
			google => firebase rest auth => https://firebase.google.com/docs/reference/rest/auth (Firebase Auth REST API) => Sign in with email / password => Endpoint(copy it and use it in code)
				in Endpoint => notice [API-KEY] => project settings -> web API key (copy it & paste in endpoint)

	6. To access resources of ingredients to everyone but orders to only authenticated user:
		google firebase -> Go to console -> rules => 
			set this rules:
				{ 
  				"rules": {
    
    					"ingredients": {
        					".read": "true",
        					".write": "true"
      					},
      					"orders": {
        					".read": "auth != null",
          					".write": "auth != null"
      					  	}
  				        }   
				}
		test it by going to orders without loginin => will get error

	7.Check idToken and expirationDate stored in localStorage for keep login of user even after page refresh:
		console => Application => localStorage => http://localhost:3000 => notice token and expirationDate

	
	8.To display user specific orders they have: 
		Need to set rules in firebase = google firebase -> Go to console -> rules => 
			in orders => "orders": {
        					".read": "auth != null",
          					".write": "auth != null",
						".indexOn": ["userId"]
      					  	}
		then login 0r signup and go to orders => notice orders data in firebase and user specific orders in application
		

	